// <auto-generated />
using System;
using AlmoxarifadoAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AlmoxarifadoAPI.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AlmoxarifadoAPI.Categoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_categoria");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoria"), 1L, 1);

                    b.Property<string>("Descricao")
                        .HasMaxLength(400)
                        .IsUnicode(false)
                        .HasColumnType("varchar(400)")
                        .HasColumnName("descricao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(90)
                        .IsUnicode(false)
                        .HasColumnType("varchar(90)")
                        .HasColumnName("nome");

                    b.HasKey("IdCategoria")
                        .HasName("PK__Categori__CD54BC5A9FEB8E65");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("AlmoxarifadoAPI.Departamento", b =>
                {
                    b.Property<int>("IdDepartamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_departamento");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDepartamento"), 1L, 1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome");

                    b.HasKey("IdDepartamento")
                        .HasName("PK__Departam__64F37A1628CE144E");

                    b.ToTable("Departamentos");
                });

            modelBuilder.Entity("AlmoxarifadoAPI.EmailsFornecedor", b =>
                {
                    b.Property<int>("IdEmail")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_email");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEmail"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("varchar(70)")
                        .HasColumnName("email");

                    b.Property<int>("IdFornecedor")
                        .HasColumnType("int")
                        .HasColumnName("id_fornecedor");

                    b.HasKey("IdEmail")
                        .HasName("PK__Emails_F__F3B378DF81DD98D1");

                    b.HasIndex("IdFornecedor");

                    b.ToTable("Emails_Fornecedor", (string)null);
                });

            modelBuilder.Entity("AlmoxarifadoAPI.EmailsFuncionario", b =>
                {
                    b.Property<int>("IdEmail")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_email");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEmail"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("varchar(70)")
                        .HasColumnName("email");

                    b.Property<int>("IdFuncionario")
                        .HasColumnType("int")
                        .HasColumnName("id_funcionario");

                    b.HasKey("IdEmail")
                        .HasName("PK__Emails_F__F3B378DFC9606086");

                    b.HasIndex("IdFuncionario");

                    b.ToTable("Emails_Funcionario", (string)null);
                });

            modelBuilder.Entity("AlmoxarifadoAPI.EnderecosFornecedor", b =>
                {
                    b.Property<int>("IdEndereco")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_endereco");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEndereco"), 1L, 1);

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("bairro");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("cidade");

                    b.Property<string>("Complemento")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("complemento");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("estado");

                    b.Property<int>("IdFornecedor")
                        .HasColumnType("int")
                        .HasColumnName("id_fornecedor");

                    b.Property<string>("Logadouro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("logadouro");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("numero");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("pais");

                    b.HasKey("IdEndereco")
                        .HasName("PK__Endereco__324B959EBD7889B3");

                    b.HasIndex("IdFornecedor");

                    b.ToTable("Enderecos_Fornecedor", (string)null);
                });

            modelBuilder.Entity("AlmoxarifadoAPI.Entrada", b =>
                {
                    b.Property<int>("IdEntrada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_entrada");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEntrada"), 1L, 1);

                    b.Property<string>("Condicao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("condicao");

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("date")
                        .HasColumnName("data_entrada");

                    b.Property<int>("IdFuncionario")
                        .HasColumnType("int")
                        .HasColumnName("id_funcionario");

                    b.Property<int>("IdTransacao")
                        .HasColumnType("int")
                        .HasColumnName("id_transacao");

                    b.Property<string>("Nota")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("nota");

                    b.HasKey("IdEntrada")
                        .HasName("PK__Entradas__167CD61B38494657");

                    b.HasIndex("IdFuncionario");

                    b.HasIndex("IdTransacao");

                    b.ToTable("Entradas");
                });

            modelBuilder.Entity("AlmoxarifadoAPI.Fornecedore", b =>
                {
                    b.Property<int>("IdFornecedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_fornecedor");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFornecedor"), 1L, 1);

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descricao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(90)
                        .IsUnicode(false)
                        .HasColumnType("varchar(90)")
                        .HasColumnName("nome");

                    b.HasKey("IdFornecedor")
                        .HasName("PK__Forneced__6C477092D75AF5CD");

                    b.ToTable("Fornecedores");
                });

            modelBuilder.Entity("AlmoxarifadoAPI.FornecedoresCategoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .HasColumnType("int")
                        .HasColumnName("id_categoria");

                    b.Property<int>("IdFornecedor")
                        .HasColumnType("int")
                        .HasColumnName("id_fornecedor");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdFornecedor");

                    b.ToTable("Fornecedores_Categorias", (string)null);
                });

            modelBuilder.Entity("AlmoxarifadoAPI.Funcionario", b =>
                {
                    b.Property<int>("IdFuncionario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_funcionario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFuncionario"), 1L, 1);

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cargo");

                    b.Property<int>("IdDepartamento")
                        .HasColumnType("int")
                        .HasColumnName("id_departamento");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome");

                    b.HasKey("IdFuncionario")
                        .HasName("PK__Funciona__6FBD69C45922D40F");

                    b.HasIndex("IdDepartamento");

                    b.ToTable("Funcionarios");
                });

            modelBuilder.Entity("AlmoxarifadoAPI.Iten", b =>
                {
                    b.Property<int>("IdItem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_item");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdItem"), 1L, 1);

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descricao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(90)
                        .IsUnicode(false)
                        .HasColumnType("varchar(90)")
                        .HasColumnName("nome");

                    b.HasKey("IdItem")
                        .HasName("PK__Itens__87C9438B7F895D57");

                    b.ToTable("Itens");
                });

            modelBuilder.Entity("AlmoxarifadoAPI.ItensCategoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .HasColumnType("int")
                        .HasColumnName("id_categoria");

                    b.Property<int>("IdItem")
                        .HasColumnType("int")
                        .HasColumnName("id_item");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdItem");

                    b.ToTable("Itens_Categorias", (string)null);
                });

            modelBuilder.Entity("AlmoxarifadoAPI.Lote", b =>
                {
                    b.Property<int>("IdLote")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_lote");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLote"), 1L, 1);

                    b.Property<DateTime?>("DataValidade")
                        .HasColumnType("date")
                        .HasColumnName("data_validade");

                    b.Property<int>("IdEntrada")
                        .HasColumnType("int")
                        .HasColumnName("id_entrada");

                    b.Property<int>("IdFornecedor")
                        .HasColumnType("int")
                        .HasColumnName("id_fornecedor");

                    b.Property<int>("IdItem")
                        .HasColumnType("int")
                        .HasColumnName("id_item");

                    b.Property<string>("Localizacao")
                        .IsRequired()
                        .HasMaxLength(90)
                        .IsUnicode(false)
                        .HasColumnType("varchar(90)")
                        .HasColumnName("localizacao");

                    b.Property<decimal>("PrecoUnitario")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("preco_unitario");

                    b.Property<int>("QuantidadeAtual")
                        .HasColumnType("int")
                        .HasColumnName("quantidade_atual");

                    b.Property<int>("QuantidadeEntrada")
                        .HasColumnType("int")
                        .HasColumnName("quantidade_entrada");

                    b.HasKey("IdLote")
                        .HasName("PK__Lotes__9A00048670755C62");

                    b.HasIndex("IdEntrada");

                    b.HasIndex("IdFornecedor");

                    b.HasIndex("IdItem");

                    b.ToTable("Lotes");
                });

            modelBuilder.Entity("AlmoxarifadoAPI.Saida", b =>
                {
                    b.Property<int>("IdSaida")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_saida");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSaida"), 1L, 1);

                    b.Property<string>("Condicao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("condicao");

                    b.Property<DateTime>("DataSaida")
                        .HasColumnType("date")
                        .HasColumnName("data_saida");

                    b.Property<int>("IdFuncionarioReceptor")
                        .HasColumnType("int")
                        .HasColumnName("id_funcionario_receptor");

                    b.Property<int>("IdFuncionarioResponsavel")
                        .HasColumnType("int")
                        .HasColumnName("id_funcionario_responsavel");

                    b.Property<int>("IdLote")
                        .HasColumnType("int")
                        .HasColumnName("id_lote");

                    b.Property<int>("IdTransacao")
                        .HasColumnType("int")
                        .HasColumnName("id_transacao");

                    b.Property<string>("Nota")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("nota");

                    b.Property<int>("QuantidadeSaida")
                        .HasColumnType("int")
                        .HasColumnName("quantidade_saida");

                    b.HasKey("IdSaida")
                        .HasName("PK__Saidas__6F9AC3B4724E51F3");

                    b.HasIndex("IdFuncionarioReceptor");

                    b.HasIndex("IdFuncionarioResponsavel");

                    b.HasIndex("IdLote");

                    b.HasIndex("IdTransacao");

                    b.ToTable("Saidas");
                });

            modelBuilder.Entity("AlmoxarifadoAPI.TelefonesFornecedor", b =>
                {
                    b.Property<int>("IdTelefone")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_telefone");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTelefone"), 1L, 1);

                    b.Property<int>("IdFornecedor")
                        .HasColumnType("int")
                        .HasColumnName("id_fornecedor");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("telefone");

                    b.HasKey("IdTelefone")
                        .HasName("PK__Telefone__28CD6834DD66F230");

                    b.HasIndex("IdFornecedor");

                    b.ToTable("Telefones_Fornecedor", (string)null);
                });

            modelBuilder.Entity("AlmoxarifadoAPI.TelefonesFuncionario", b =>
                {
                    b.Property<int>("IdTelefone")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_telefone");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTelefone"), 1L, 1);

                    b.Property<int>("IdFuncionario")
                        .HasColumnType("int")
                        .HasColumnName("id_funcionario");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("telefone");

                    b.HasKey("IdTelefone")
                        .HasName("PK__Telefone__28CD68344465013D");

                    b.HasIndex("IdFuncionario");

                    b.ToTable("Telefones_Funcionario", (string)null);
                });

            modelBuilder.Entity("AlmoxarifadoAPI.Transaco", b =>
                {
                    b.Property<int>("IdTransacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_transacao");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTransacao"), 1L, 1);

                    b.Property<DateTime>("DataTransacao")
                        .HasColumnType("date")
                        .HasColumnName("data_transacao");

                    b.Property<int>("IdFuncionario")
                        .HasColumnType("int")
                        .HasColumnName("id_funcionario");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("motivo");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("tipo");

                    b.HasKey("IdTransacao")
                        .HasName("PK__Transaco__0FBBF773C9520717");

                    b.HasIndex("IdFuncionario");

                    b.ToTable("Transacoes");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("AlmoxarifadoAPI.EmailsFornecedor", b =>
                {
                    b.HasOne("AlmoxarifadoAPI.Fornecedore", "IdFornecedorNavigation")
                        .WithMany("EmailsFornecedors")
                        .HasForeignKey("IdFornecedor")
                        .IsRequired()
                        .HasConstraintName("FK__Emails_Fo__id_fo__4316F928");

                    b.Navigation("IdFornecedorNavigation");
                });

            modelBuilder.Entity("AlmoxarifadoAPI.EmailsFuncionario", b =>
                {
                    b.HasOne("AlmoxarifadoAPI.Funcionario", "IdFuncionarioNavigation")
                        .WithMany("EmailsFuncionarios")
                        .HasForeignKey("IdFuncionario")
                        .IsRequired()
                        .HasConstraintName("FK__Emails_Fu__id_fu__52593CB8");

                    b.Navigation("IdFuncionarioNavigation");
                });

            modelBuilder.Entity("AlmoxarifadoAPI.EnderecosFornecedor", b =>
                {
                    b.HasOne("AlmoxarifadoAPI.Fornecedore", "IdFornecedorNavigation")
                        .WithMany("EnderecosFornecedors")
                        .HasForeignKey("IdFornecedor")
                        .IsRequired()
                        .HasConstraintName("FK__Enderecos__id_fo__3D5E1FD2");

                    b.Navigation("IdFornecedorNavigation");
                });

            modelBuilder.Entity("AlmoxarifadoAPI.Entrada", b =>
                {
                    b.HasOne("AlmoxarifadoAPI.Funcionario", "IdFuncionarioNavigation")
                        .WithMany("Entrada")
                        .HasForeignKey("IdFuncionario")
                        .IsRequired()
                        .HasConstraintName("FK__Entradas__id_fun__59FA5E80");

                    b.HasOne("AlmoxarifadoAPI.Transaco", "IdTransacaoNavigation")
                        .WithMany("Entrada")
                        .HasForeignKey("IdTransacao")
                        .IsRequired()
                        .HasConstraintName("FK__Entradas__id_tra__59063A47");

                    b.Navigation("IdFuncionarioNavigation");

                    b.Navigation("IdTransacaoNavigation");
                });

            modelBuilder.Entity("AlmoxarifadoAPI.FornecedoresCategoria", b =>
                {
                    b.HasOne("AlmoxarifadoAPI.Categoria", "IdCategoriaNavigation")
                        .WithMany()
                        .HasForeignKey("IdCategoria")
                        .IsRequired()
                        .HasConstraintName("FK__Fornecedo__id_ca__3A81B327");

                    b.HasOne("AlmoxarifadoAPI.Fornecedore", "IdFornecedorNavigation")
                        .WithMany()
                        .HasForeignKey("IdFornecedor")
                        .IsRequired()
                        .HasConstraintName("FK__Fornecedo__id_fo__398D8EEE");

                    b.Navigation("IdCategoriaNavigation");

                    b.Navigation("IdFornecedorNavigation");
                });

            modelBuilder.Entity("AlmoxarifadoAPI.Funcionario", b =>
                {
                    b.HasOne("AlmoxarifadoAPI.Departamento", "IdDepartamentoNavigation")
                        .WithMany("Funcionarios")
                        .HasForeignKey("IdDepartamento")
                        .IsRequired()
                        .HasConstraintName("FK__Funcionar__id_de__4CA06362");

                    b.Navigation("IdDepartamentoNavigation");
                });

            modelBuilder.Entity("AlmoxarifadoAPI.ItensCategoria", b =>
                {
                    b.HasOne("AlmoxarifadoAPI.Categoria", "IdCategoriaNavigation")
                        .WithMany()
                        .HasForeignKey("IdCategoria")
                        .IsRequired()
                        .HasConstraintName("FK__Itens_Cat__id_ca__47DBAE45");

                    b.HasOne("AlmoxarifadoAPI.Iten", "IdItemNavigation")
                        .WithMany()
                        .HasForeignKey("IdItem")
                        .IsRequired()
                        .HasConstraintName("FK__Itens_Cat__id_it__46E78A0C");

                    b.Navigation("IdCategoriaNavigation");

                    b.Navigation("IdItemNavigation");
                });

            modelBuilder.Entity("AlmoxarifadoAPI.Lote", b =>
                {
                    b.HasOne("AlmoxarifadoAPI.Entrada", "IdEntradaNavigation")
                        .WithMany("Lotes")
                        .HasForeignKey("IdEntrada")
                        .IsRequired()
                        .HasConstraintName("FK__Lotes__id_entrad__5CD6CB2B");

                    b.HasOne("AlmoxarifadoAPI.Fornecedore", "IdFornecedorNavigation")
                        .WithMany("Lotes")
                        .HasForeignKey("IdFornecedor")
                        .IsRequired()
                        .HasConstraintName("FK__Lotes__id_fornec__5EBF139D");

                    b.HasOne("AlmoxarifadoAPI.Iten", "IdItemNavigation")
                        .WithMany("Lotes")
                        .HasForeignKey("IdItem")
                        .IsRequired()
                        .HasConstraintName("FK__Lotes__id_item__5DCAEF64");

                    b.Navigation("IdEntradaNavigation");

                    b.Navigation("IdFornecedorNavigation");

                    b.Navigation("IdItemNavigation");
                });

            modelBuilder.Entity("AlmoxarifadoAPI.Saida", b =>
                {
                    b.HasOne("AlmoxarifadoAPI.Funcionario", "IdFuncionarioReceptorNavigation")
                        .WithMany("SaidaIdFuncionarioReceptorNavigations")
                        .HasForeignKey("IdFuncionarioReceptor")
                        .IsRequired()
                        .HasConstraintName("FK__Saidas__id_funci__6477ECF3");

                    b.HasOne("AlmoxarifadoAPI.Funcionario", "IdFuncionarioResponsavelNavigation")
                        .WithMany("SaidaIdFuncionarioResponsavelNavigations")
                        .HasForeignKey("IdFuncionarioResponsavel")
                        .IsRequired()
                        .HasConstraintName("FK__Saidas__id_funci__6383C8BA");

                    b.HasOne("AlmoxarifadoAPI.Lote", "IdLoteNavigation")
                        .WithMany("Saida")
                        .HasForeignKey("IdLote")
                        .IsRequired()
                        .HasConstraintName("FK__Saidas__id_lote__628FA481");

                    b.HasOne("AlmoxarifadoAPI.Transaco", "IdTransacaoNavigation")
                        .WithMany("Saida")
                        .HasForeignKey("IdTransacao")
                        .IsRequired()
                        .HasConstraintName("FK__Saidas__id_trans__619B8048");

                    b.Navigation("IdFuncionarioReceptorNavigation");

                    b.Navigation("IdFuncionarioResponsavelNavigation");

                    b.Navigation("IdLoteNavigation");

                    b.Navigation("IdTransacaoNavigation");
                });

            modelBuilder.Entity("AlmoxarifadoAPI.TelefonesFornecedor", b =>
                {
                    b.HasOne("AlmoxarifadoAPI.Fornecedore", "IdFornecedorNavigation")
                        .WithMany("TelefonesFornecedors")
                        .HasForeignKey("IdFornecedor")
                        .IsRequired()
                        .HasConstraintName("FK__Telefones__id_fo__403A8C7D");

                    b.Navigation("IdFornecedorNavigation");
                });

            modelBuilder.Entity("AlmoxarifadoAPI.TelefonesFuncionario", b =>
                {
                    b.HasOne("AlmoxarifadoAPI.Funcionario", "IdFuncionarioNavigation")
                        .WithMany("TelefonesFuncionarios")
                        .HasForeignKey("IdFuncionario")
                        .IsRequired()
                        .HasConstraintName("FK__Telefones__id_fu__4F7CD00D");

                    b.Navigation("IdFuncionarioNavigation");
                });

            modelBuilder.Entity("AlmoxarifadoAPI.Transaco", b =>
                {
                    b.HasOne("AlmoxarifadoAPI.Funcionario", "IdFuncionarioNavigation")
                        .WithMany("Transacos")
                        .HasForeignKey("IdFuncionario")
                        .IsRequired()
                        .HasConstraintName("FK__Transacoe__id_fu__5535A963");

                    b.Navigation("IdFuncionarioNavigation");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AlmoxarifadoAPI.Departamento", b =>
                {
                    b.Navigation("Funcionarios");
                });

            modelBuilder.Entity("AlmoxarifadoAPI.Entrada", b =>
                {
                    b.Navigation("Lotes");
                });

            modelBuilder.Entity("AlmoxarifadoAPI.Fornecedore", b =>
                {
                    b.Navigation("EmailsFornecedors");

                    b.Navigation("EnderecosFornecedors");

                    b.Navigation("Lotes");

                    b.Navigation("TelefonesFornecedors");
                });

            modelBuilder.Entity("AlmoxarifadoAPI.Funcionario", b =>
                {
                    b.Navigation("EmailsFuncionarios");

                    b.Navigation("Entrada");

                    b.Navigation("SaidaIdFuncionarioReceptorNavigations");

                    b.Navigation("SaidaIdFuncionarioResponsavelNavigations");

                    b.Navigation("TelefonesFuncionarios");

                    b.Navigation("Transacos");
                });

            modelBuilder.Entity("AlmoxarifadoAPI.Iten", b =>
                {
                    b.Navigation("Lotes");
                });

            modelBuilder.Entity("AlmoxarifadoAPI.Lote", b =>
                {
                    b.Navigation("Saida");
                });

            modelBuilder.Entity("AlmoxarifadoAPI.Transaco", b =>
                {
                    b.Navigation("Entrada");

                    b.Navigation("Saida");
                });
#pragma warning restore 612, 618
        }
    }
}
